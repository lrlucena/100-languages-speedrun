;  C
; B D
;  G
; A E
;  F
to seven_seg :a :b :c :d :e :f :g
  ifelse :a [pd] [pu]
  fd 5
  ifelse :b [pd] [pu]
  fd 5
  rt 90
  ifelse :c [pd] [pu]
  fd 5
  rt 90
  ifelse :d [pd] [pu]
  fd 5
  ifelse :e [pd] [pu]
  fd 5
  rt 90
  ifelse :f [pd] [pu]
  fd 5
  pu rt 90 fd 5 rt 90
  ifelse :g [pd] [pu]
  fd 5
  pu fd 5 rt 90 fd 5 rt 180 pd
end

to draw_0
  seven_seg true true true true true true false
end

to draw_1
  fd 10 pu
  rt 90 fd 5
  rt 90 fd 10
  pd rt 180
end

to draw_2
  seven_seg true false true true false true true
end

to draw_3
  seven_seg false false true true true true true
end

to draw_4
  seven_seg false true false true true false true
end

to draw_5
  seven_seg false true true false true true true
end

to draw_6
  seven_seg true true true false true true true
end

to draw_7
  seven_seg false false true true true false false
end

to draw_8
  seven_seg true true true true true true true
end

to draw_9
  seven_seg false true true true true true true
end

to draw_digit :digit
  if (:digit = 0) [draw_0]
  if (:digit = 1) [draw_1]
  if (:digit = 2) [draw_2]
  if (:digit = 3) [draw_3]
  if (:digit = 4) [draw_4]
  if (:digit = 5) [draw_5]
  if (:digit = 6) [draw_6]
  if (:digit = 7) [draw_7]
  if (:digit = 8) [draw_8]
  if (:digit = 9) [draw_9]
end

to draw_number :number
  make "a (:number % 10)
  make "b (:number - :a)
  make "c (:b / 10)
  if (:c > 0) [draw_number :c]
  draw_digit :a
end

to draw_i
  fd 10 ; main stroke
  ; go to next character
  pu
  rt 90 fd 5
  rt 90 fd 10
  ; reset pen state
  pd
  rt 180
end

to draw_f
  fd 10 ; main line
  rt 90 fd 5 ; top stroke
  pu rt 180 fd 5 lt 90 fd 5; move to next stroke
  pd lt 90 fd 5; middle stroke
  ; go to next character
  pu fd 5 rt 90 fd 5
  ; reset pen state
  pd
  rt 180
end

to draw_b
  fd 2.5 ; main stroke a bit
  arc 2.5 180 ; bottom loop
  fd 5 ; more main stroke
  arc 2.5 180 ; top loop
  fd 2.5 ; finish main stroke
  pu rt 180 fd 10 ; go back
  ; go to next character
  lt 90 fd 7
  ; reset pen state
  pd lt 90
end

to draw_u
  pu fw 3 pd fd 7 ; left stroke
  pu rt 90 fd 6 ; move to right stroke
  pd rt 90 fd 7 ; right stroke
  pu rt 90 fd 3 ; move to center of arc
  pd rt 180 arc 3 180 ; arc
  ; go to next character
  pu fd 8 rt 90 fd 3
  ; reset pen state
  pd rt 180
end

to draw_z
  rt 90 fd 5; bottom line
  pu rt 180 fd 5 ; return
  pd rt 120 fd 11 ; diagonal stroke
  lt 120 fd 5 ; top line
  ; advance to next character
  pu rt 180 fd 5 rt 120 fd 11 lt 120 fd 10
  ; reset pen state
  pd lt 90
end

to draw_fizz
  draw_f draw_i draw_z draw_z
end

to draw_buzz
  draw_b draw_u draw_z draw_z
end

to draw_fizzbuzz
  draw_fizz draw_buzz
end

to draw_line :i
  setxy 15 (:i * 15)
  ifelse (:i % 15 = 0) [draw_fizzbuzz] [
    ifelse (:i % 5 = 0) [draw_buzz] [
      ifelse (:i % 3 = 0) [draw_fizz] [draw_number :i]
    ]
  ]
end

reset
cs
make "i 1
repeat 30 [
  draw_line :i
  make "i (1 + :i)
]
ht
